-- Save the pointslocal linePointX = {}local linePointY = {}local linePointZ = {}local playerslocal nyanized = falselocal timerfunction start()	timer = setTimer(function()		if nyanized then			players = getElementsByType("player")			for i, player in ipairs(players) do				if linePointX[player] == nil then					linePointX[player] = {}					linePointY[player] = {}					linePointZ[player] = {}				end				local vehicle				if isPedInVehicle(player) then					vehicle = getPedOccupiedVehicle(player)				else					vehicle = player				end				if vehicle then					local lX, lY, lZ = getElementPosition(vehicle)					if lX and lY and lZ then						table.insert(linePointX[player], lX)						table.insert(linePointY[player], lY)						table.insert(linePointZ[player], lZ-0.5)					end					if(#linePointX[player] > 40)then						table.remove(linePointX[player], 1)						table.remove(linePointY[player], 1)						table.remove(linePointZ[player], 1)					end				end			end		end	end, 80, 0)endaddEventHandler("onClientResourceStart", getRootElement(), start )-- Drawfunction render()	if nyanized then		for i, player in ipairs(players ) do			for i,d in ipairs(linePointX[player])do				if i then					if linePointX[player][i] and linePointX[player][i-1] and linePointX[player][i-2] and linePointX[player][i-3] and linePointX[player][i-4] then						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i], linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1], tocolor(255, 0,0, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1], linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2], tocolor(255, 0,0, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3], linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4], tocolor(255, 0,0, 255), 9)						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i]+0.2, linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.2, tocolor(255, 174,0, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.2, linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2]+0.2, tocolor(255, 174,0, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3]+0.2, linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4]+0.2, tocolor(255, 174,0, 255), 9)						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i]+0.4, linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.4, tocolor(255, 246,0, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.4, linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2]+0.4, tocolor(255, 246,0, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3]+0.4, linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4]+0.4, tocolor(255, 246,0, 255), 9)						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i]+0.6, linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.6, tocolor(138, 255,0, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.6, linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2]+0.6, tocolor(138, 255,0, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3]+0.6, linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4]+0.6, tocolor(138, 255,0, 255), 9)						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i]+0.8, linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.8, tocolor(0, 144,255, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+0.8, linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2]+0.8, tocolor(0, 144,255, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3]+0.8, linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4]+0.8, tocolor(0, 144,255, 255), 9)						dxDrawLine3D(linePointX[player][i], linePointY[player][i], linePointZ[player][i]+1, linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+1, tocolor(180, 0,255, 255), 9)						dxDrawLine3D(linePointX[player][i-1], linePointY[player][i-1], linePointZ[player][i-1]+1, linePointX[player][i-2], linePointY[player][i-2], linePointZ[player][i-2]+1, tocolor(180, 0,255, 255), 9)						dxDrawLine3D(linePointX[player][i-3], linePointY[player][i-3], linePointZ[player][i-3]+1, linePointX[player][i-4], linePointY[player][i-4], linePointZ[player][i-4]+1, tocolor(180, 0,255, 255), 9)					end				end			end		end	endendaddEventHandler("onClientRender", getRootElement(), render)addCommandHandler("nyan", function() 	nyanized = not nyanized	if nyanized then		linePointX = {}		linePointY = {}		linePointZ = {}		start()		addEventHandler("onClientRender", root, render)	else		killTimer(timer)		timer = nil		removeEventHandler ( "onClientRender", root, render )	endend)